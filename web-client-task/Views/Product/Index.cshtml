@using web_client_task.ViewModels.Products
@model ProductsIndexViewModel

@{
    ViewData["Title"] = "Index products";
}

<h1>Products</h1>
<main>
    <div class="album py-5 bg-light">
        <div class="container">
            <div class="row">
                @if (Model.Products.Count() == 0)
                {
                    <div class="row">
                        <h2>
                            <center>No products yet<center>
                        </h2>
                    </div>
                }
                else
                {
                    foreach (var item in Model.Products)
                    {
                        <div class="col-md-4">
                            <div class="card mb-4 box-shadow">
                        @if (item.ImagePath != null)
                        {
                        <img class="card-img-top" src="@item.ImagePath" alt="Card image cap">
                        }
                        else
                        {
                        <img class="card-img-top" data-src="holder.js/100px225?theme=thumb&bg=55595c&fg=eceeef&text=Thumbnail" alt="Card image cap">
                        }
                                <div class="card-body">

                                    <div class="row">
                                        <div class="col">
                                            <h6 class="jumbotron-heading">Product Name</h6>
                                            <p class="card-text">@Html.DisplayFor(modelItem => item.Name)</p>
                                        </div>
                                        <div class="col">
                                            <h6 class="jumbotron-heading">Default Quantity</h6>
                                            <p class="card-text">@Html.DisplayFor(modelItem => item.DefaultQuantity)</p>
                                        </div>
                                    </div>

                                    <h6 class="jumbotron-heading">Product Description</h6>
                                    <p class="card-text">@Html.DisplayFor(modelItem => item.Description)</p>

                                    <a asp-controller="Product" asp-action="Details" asp-route-id="@item.Id" class="btn btn-primary my-2">Details</a>
                                    <a asp-controller="Product" asp-action="Update" asp-route-id="@item.Id" class="btn btn-secondary my-2">Update</a>
                                    <a asp-controller="Product" asp-action="DeleteProduct" asp-route-productId="@item.Id" class="btn btn-danger my-2">Delete</a>
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div class="btn-group">
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    }
                }
            </div>
        </div>
    </div>
    @if (Model.PageViewModel.HasPreviousPage)
    {
        <a asp-action="Index"
       asp-route-pageNumber="@(Model.PageViewModel.PageNumber - 1)"
       class="btn btn-outline-dark">
            <i class="glyphicon glyphicon-chevron-left"></i>
            Previous
        </a>
    }
    @if (Model.PageViewModel.HasNextPage)
    {
        <a asp-action="Index"
       asp-route-pageNumber="@(Model.PageViewModel.PageNumber + 1)"
       class="btn btn-outline-dark">
            Next
            <i class="glyphicon glyphicon-chevron-right"></i>
        </a>
    }
</main>
